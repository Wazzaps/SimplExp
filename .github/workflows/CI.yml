name: CI

on:
  push:
  pull_request:

jobs:
  linux:
    name: Build linux wheels
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    steps:
      - uses: actions/checkout@v1
      - name: Install nightly rust
        run: curl --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly
      - name: Build
        run: |
          source $HOME/.cargo/env
          for PYBIN in /opt/python/cp3[6789]*/bin; do
            "${PYBIN}/pip" install maturin cffi
            "${PYBIN}/maturin" build -i "${PYBIN}/python" --release -o dist --manylinux 2014
          done
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

#  windows:
#    runs-on: windows-latest
#    steps:
#    - uses: actions/checkout@v2
#    - uses: messense/maturin-action@v1
#      with:
#        command: build
#        args: --release --no-sdist -o dist
#    - name: Upload wheels
#      uses: actions/upload-artifact@v2
#      with:
#        name: wheels
#        path: dist
#
#  macos:
#    runs-on: macos-latest
#    steps:
#    - uses: actions/checkout@v2
#    - uses: messense/maturin-action@v1
#      with:
#        command: build
#        args: --release --no-sdist -o dist --universal2
#    - name: Upload wheels
#      uses: actions/upload-artifact@v2
#      with:
#        name: wheels
#        path: dist
#
#  release:
#    name: Release
#    runs-on: ubuntu-latest
#    if: "startsWith(github.ref, 'refs/tags/')"
#    needs: [ macos, windows, linux ]
#    steps:
#      - uses: actions/download-artifact@v2
#        with:
#          name: wheels
#      - name: Publish to PyPI
#        uses: messense/maturin-action@v1
#        env:
#          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
#        with:
#          command: upload
#          args: --skip-existing *